GET         /generate-name                        controllers.users.sorm.SormUsers.generateName
GET         /email/:token                         controllers.users.sorm.SormUsers.findEmailByTokenUuid(token)
GET         /get-users                            controllers.users.sorm.SormUsers.getUsers
GET         /navigation                           controllers.users.sorm.SormUsers.navigation
GET         /partials/home.tpl.html               controllers.users.sorm.SormUsers.home
POST        /timezone/add                         controllers.users.sorm.SormUsers.addTimeZone

GET         /rest/timezones                       controllers.users.sorm.SormUsers.restTimeZones
GET         /rest/timezone/:zoneName              controllers.users.sorm.SormUsers.restTimeZone(zoneName)
POST        /rest/timezone/add                    controllers.users.sorm.SormUsers.restAddTimeZone

# Login page
GET         /login                                securesocial.controllers.LoginPage.login
GET         /logout                               securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET         /signup                               securesocial.controllers.Registration.startSignUp
POST        /signup                               securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                        securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                        securesocial.controllers.Registration.handleSignUp(token)
GET         /password/reset                       securesocial.controllers.Registration.startResetPassword
POST        /password/reset                       securesocial.controllers.Registration.handleStartResetPassword
GET         /password/reset/:token                securesocial.controllers.Registration.resetPassword(token)
POST        /password/reset/:token                securesocial.controllers.Registration.handleResetPassword(token)
GET         /password/change                      securesocial.controllers.PasswordChange.page
POST        /password/change                      securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
POST        /authenticate/:provider               securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                       securesocial.controllers.ProviderController.notAuthorized

GET         /*file                                controllers.users.Assets.at(path="/public/users", file)
